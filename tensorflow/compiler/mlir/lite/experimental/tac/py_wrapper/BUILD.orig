load("//third_party/tensorflow:tensorflow.google.bzl", "pybind_extension")
load("//third_party/tensorflow:tensorflow.bzl", "VERSION")
load(
    "//third_party/tensorflow/third_party/mkl_dnn:build_defs.bzl",
    "if_onednn_v3",
)

package(
    default_applicable_licenses = ["//third_party/tensorflow:license"],  # copybara:comment
    default_visibility = [
        "//third_party/tensorflow/compiler/mlir/lite/experimental/tac:__subpackages__",
    ],
    licenses = ["notice"],
)

cc_library(
    name = "tac_wrapper_lib",
    srcs = ["tac_wrapper.cc"],
    hdrs = [
        "tac_wrapper.h",
    ],
    deps = [
        "//third_party/absl/status",
        "//third_party/python_runtime:headers",  # buildcleaner: keep
        "//third_party/tensorflow/compiler/mlir/lite/experimental/tac:common",
        "//third_party/tensorflow/compiler/mlir/lite/experimental/tac:target_aware_conversion",
        "//third_party/tensorflow/compiler/mlir/lite/experimental/tac:tflite_importer_exporter",
        "//third_party/tensorflow/compiler/mlir/lite/experimental/tac/hardwares:all-target-hardwares",
        "//third_party/tensorflow/compiler/mlir/lite/experimental/tac/hardwares:target_hardware",
        "//third_party/tensorflow/compiler/mlir/lite/experimental/tac/utils",
        "//third_party/tensorflow/compiler/mlir/tensorflow",
    ],
)

pybind_extension(
    name = "_pywrap_tac_wrapper",
    srcs = [
        "tac_wrapper_pybind11.cc",
    ],
    hdrs = ["tac_wrapper.h"],
    dynamic_deps = select({
        "//third_party/tensorflow:macos": ["//third_party/tensorflow:libtensorflow_framework.%s.dylib" % VERSION],
        "//third_party/tensorflow:windows": [],
        "//conditions:default": ["//third_party/tensorflow:libtensorflow_framework.so.%s" % VERSION],
    }),
    static_deps = [
        "@arm_neon_2_x86_sse//:__subpackages__",
        "@bazel_tools//:__subpackages__",
        "@boringssl//:__subpackages__",
        "@clog//:__subpackages__",
        "@com_github_cares_cares//:__subpackages__",
        "@com_github_googlecloudplatform_tensorflow_gcp_tools//:__subpackages__",
        "@com_github_grpc_grpc//:__subpackages__",
        "@com_google_absl//:__subpackages__",
        "@com_google_googleapis//:__subpackages__",
        "@com_google_protobuf//:__subpackages__",
        "@com_googlesource_code_re2//:__subpackages__",
        "@compute_library//:__subpackages__",
        "@cpuinfo//:__subpackages__",
        "@curl//:__subpackages__",
        "@double_conversion//:__subpackages__",
        "//third_party/eigen3:__subpackages__",
        "@farmhash_archive//:__subpackages__",
        "@farmhash_gpu_archive//:__subpackages__",
        "@fft2d//:__subpackages__",
        "//third_party/flatbuffers:__subpackages__",
        "//third_party/FP16:__subpackages__",
        "@FXdiv//:__subpackages__",
        "@gemmlowp//:__subpackages__",
        "//third_party/gif:__subpackages__",
        "//third_party/highwayhash:__subpackages__",
        "//third_party/hwloc:__subpackages__",
        "//third_party/icu:__subpackages__",
        "@jsoncpp_git//:__subpackages__",
        "//third_party/libjpeg_turbo:__subpackages__",
        "@llvm_openmp//:__subpackages__",
        "//third_party/llvm/llvm-project:__subpackages__",
        "@llvm_terminfo//:__subpackages__",
        "@llvm_zlib//:__subpackages__",
        "@local_config_cuda//:__subpackages__",
        "@local_config_git//:__subpackages__",
        "@local_config_nccl//:__subpackages__",
        "@local_config_python//:__subpackages__",
        "@local_config_rocm//:__subpackages__",
        "@local_config_tensorrt//:__subpackages__",
        "@local_execution_config_platform//:__subpackages__",
        "@mkl_dnn_acl_compatible//:__subpackages__",
        "@mkl_dnn_v1//:__subpackages__",
        "//third_party/nsync:__subpackages__",
        "@org_sqlite//:__subpackages__",
        "@platforms//:__subpackages__",
        "//third_party/png:__subpackages__",
        "//third_party/pthreadpool:__subpackages__",
        "//third_party/pybind11:__subpackages__",
        "//third_party/ruy:__subpackages__",
        "@snappy//:__subpackages__",
        "//third_party/sobol_data:__subpackages__",
        "//third_party/stablehlo:__subpackages__",
        "//:__subpackages__",
        "@upb//:__subpackages__",
        "//third_party/XNNPACK:__subpackages__",
        "@zlib//:__subpackages__",
    ] + if_onednn_v3(["@onednn_v3//:__subpackages__"]),
    deps = [
        ":tac_wrapper_lib",
        "//third_party/pybind11",
        "//third_party/python_runtime:headers",
        "//third_party/tensorflow/python/lib/core:pybind11_lib",
    ],
)
